/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Address,
  ExecutableScript,
  ExecuteScriptParams,
  ExecuteScriptResult,
  Script,
  SignerProvider,
  HexString,
} from "@alephium/web3";
import { default as DestroyScriptJson } from "../scripts/Destroy.ral.json";
import { default as MintNFTScriptJson } from "../scripts/MintNFT.ral.json";
import { default as SetCollectionScriptJson } from "../scripts/SetCollection.ral.json";
import { default as SetControllerByteVecScriptJson } from "../scripts/SetControllerByteVec.ral.json";
import { default as SetControllerU256ScriptJson } from "../scripts/SetControllerU256.ral.json";
import { default as SetCoordinatorByteVecScriptJson } from "../scripts/SetCoordinatorByteVec.ral.json";
import { default as SetCoordinatorU256ScriptJson } from "../scripts/SetCoordinatorU256.ral.json";
import { default as WithdrawScriptJson } from "../scripts/Withdraw.ral.json";

export const Destroy = new ExecutableScript<{ nftCollectionId: HexString }>(
  Script.fromJson(DestroyScriptJson, "", [])
);

export const MintNFT = new ExecutableScript<{ nftCollectionId: HexString }>(
  Script.fromJson(MintNFTScriptJson, "", [])
);

export const SetCollection = new ExecutableScript<{
  controller: HexString;
  address: Address;
}>(Script.fromJson(SetCollectionScriptJson, "", []));

export const SetControllerByteVec = new ExecutableScript<{
  splice: HexString;
  address: Address;
}>(Script.fromJson(SetControllerByteVecScriptJson, "", []));

export const SetControllerU256 = new ExecutableScript<{
  splice: HexString;
  address: Address;
}>(Script.fromJson(SetControllerU256ScriptJson, "", []));

export const SetCoordinatorByteVec = new ExecutableScript<{
  splice: HexString;
  address: Address;
}>(Script.fromJson(SetCoordinatorByteVecScriptJson, "", []));

export const SetCoordinatorU256 = new ExecutableScript<{
  splice: HexString;
  address: Address;
}>(Script.fromJson(SetCoordinatorU256ScriptJson, "", []));

export const Withdraw = new ExecutableScript<{
  nftCollectionId: HexString;
  to: Address;
  amount: bigint;
}>(Script.fromJson(WithdrawScriptJson, "", []));
